// <auto-generated />
using System;
using CityTransport.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityTransport.Infrastructure.Data.Migrations
{
    [DbContext(typeof(RatBVTransportContext))]
    [Migration("20230613092644_AddFavoriteBusRoute")]
    partial class AddFavoriteBusRoute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityTransport.Core.Data.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"), 1L, 1);

                    b.Property<string>("AreaName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.HasKey("AreaId");

                    b.HasIndex("CityId");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"), 1L, 1);

                    b.Property<string>("BusName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("BusId")
                        .HasName("PK__Bus__6A0F609575E632E3");

                    b.ToTable("Bus", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.BusStation", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("StationName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("StationId")
                        .HasName("PK__BusStati__E0D8A6DDC8727232");

                    b.HasIndex("AreaId");

                    b.ToTable("BusStation", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MetropolitanAreaId")
                        .HasColumnType("int")
                        .HasColumnName("MetropolitanAreaID");

                    b.HasKey("CityId");

                    b.HasIndex("MetropolitanAreaId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.FavoriteBusRoute", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RouteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"), 1L, 1);

                    b.Property<string>("BusName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("StationFrom")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("StationTo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RouteId")
                        .HasName("PK__FavoriteBusRoute__E0D8A6DDC8427532");

                    b.ToTable("FavoriteBusRoute", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.MetropolitanArea", b =>
                {
                    b.Property<int>("MetropolitanAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MetropolitanAreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetropolitanAreaId"), 1L, 1);

                    b.Property<string>("MetropolitanAreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MetropolitanAreaId");

                    b.ToTable("MetropolitanArea", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<string>("ArrivalTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<TimeSpan?>("ArrivalTimeExplicit")
                        .HasColumnType("time");

                    b.Property<int?>("BusId")
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.HasKey("ScheduleId");

                    b.HasIndex("BusId");

                    b.HasIndex("StationId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("CityTransport.Core.Data.Area", b =>
                {
                    b.HasOne("CityTransport.Core.Data.City", "City")
                        .WithMany("Areas")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Area__CityID__6E01572D");

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityTransport.Core.Data.BusStation", b =>
                {
                    b.HasOne("CityTransport.Core.Data.Area", "Area")
                        .WithMany("BusStations")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK__BusStatio__AreaI__70DDC3D8");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("CityTransport.Core.Data.City", b =>
                {
                    b.HasOne("CityTransport.Core.Data.MetropolitanArea", "MetropolitanArea")
                        .WithMany("Cities")
                        .HasForeignKey("MetropolitanAreaId")
                        .IsRequired()
                        .HasConstraintName("FK__City__Metropolit__6B24EA82");

                    b.Navigation("MetropolitanArea");
                });

            modelBuilder.Entity("CityTransport.Core.Data.Schedule", b =>
                {
                    b.HasOne("CityTransport.Core.Data.Bus", "Bus")
                        .WithMany("Schedules")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__Schedule__BusID__75A278F5");

                    b.HasOne("CityTransport.Core.Data.BusStation", "Station")
                        .WithMany("Schedules")
                        .HasForeignKey("StationId")
                        .HasConstraintName("FK__Schedule__Statio__76969D2E");

                    b.Navigation("Bus");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("CityTransport.Core.Data.Area", b =>
                {
                    b.Navigation("BusStations");
                });

            modelBuilder.Entity("CityTransport.Core.Data.Bus", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("CityTransport.Core.Data.BusStation", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("CityTransport.Core.Data.City", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("CityTransport.Core.Data.MetropolitanArea", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
